/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ (() => {

eval("function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/*require('./bootstrap');*/\ndocument.addEventListener(\"click\", documentActions);\ndocument.addEventListener(\"keyup\", documentActions);\ndocument.addEventListener(\"change\", documentActions);\n\nfunction isJson(item) {\n  item = typeof item !== \"string\" ? JSON.stringify(item) : item;\n\n  try {\n    item = JSON.parse(item);\n  } catch (e) {\n    return false;\n  }\n\n  if (_typeof(item) === \"object\" && item !== null) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction documentActions(_x) {\n  return _documentActions.apply(this, arguments);\n}\n\nfunction _documentActions() {\n  _documentActions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n    var targetElement, curTd, tr, childs, headerTable, editFields, btnSave, btnAbort, _curTd, _tr, _childs, btnEdit, _curTd2, _tr2, _childs2, data, table, checkedElem, delElem, _table, template, newTr, _tr3, filter, evt, _table2, _curTd3, _tr4, _childs3, _data, searchElem, _table3, i, status, listCheckbox, _status, allCheckbox, listCheckBox, searchTr, listFields, strFilter, searchData, _strFilter, key, url, response, _data2, filterIds, targetName, target, list, checked;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            targetElement = e.target;\n\n            if (targetElement.closest('[data-btn=\"edit\"]')) {\n              curTd = targetElement.parentElement;\n              tr = curTd.parentElement;\n              childs = tr.children;\n              headerTable = document.querySelector(\"[data-headers]\").children;\n              editFields = {};\n              Array.prototype.forEach.call(headerTable, function (el, i) {\n                if (el.closest('[data-edit-col]')) {\n                  editFields[i] = {\n                    name: el.getAttribute(\"data-edit-col\"),\n                    type: el.getAttribute(\"data-edit-type\")\n                  };\n\n                  if (editFields[i].type == \"select\") {\n                    editFields[i].target = el.getAttribute(\"data-edit-target\");\n                  }\n                }\n              });\n              Array.prototype.forEach.call(childs, function (child, i) {\n                var value, inp, area;\n\n                if (editFields.hasOwnProperty(i)) {\n                  switch (editFields[i].type) {\n                    case \"input\":\n                      value = child.innerText;\n                      child.innerText = \"\";\n                      inp = document.createElement(\"input\");\n                      inp.name = editFields[i].name;\n                      inp.value = value;\n                      inp.setAttribute(\"data-value\", value);\n                      inp.classList.add('form-control');\n                      child.append(inp);\n                      break;\n\n                    case \"select\":\n                      var list = child.querySelectorAll(\"ul li\");\n                      var filter = false;\n\n                      if (child.querySelector('ul') && child.querySelector('ul').hasAttributes('data-filter')) {\n                        filter = child.querySelector('ul').getAttribute('data-filter');\n                        filter = JSON.parse(filter);\n                        console.log(filter);\n                      }\n\n                      var listValue = {};\n                      Array.from(list).map(function (elem) {\n                        listValue[elem.getAttribute(\"data-id\")] = elem.innerText;\n                      }, listValue);\n                      child.innerHTML = \"\";\n                      var teamplate = document.querySelector(\"#\" + editFields[i].target);\n                      var selectClone = teamplate.content.cloneNode(true);\n                      Array.from(selectClone.querySelectorAll(\"option\")).map(function (opt) {\n                        if (filter) {\n                          if (!filter.includes(+opt.value)) {\n                            opt.remove();\n                          }\n                        }\n\n                        if (listValue.hasOwnProperty(opt.value)) {\n                          opt.selected = true;\n                        }\n                      }, listValue, filter);\n                      var select = selectClone.querySelector(\"select\");\n                      select.setAttribute(\"data-value\", JSON.stringify(listValue));\n                      select.setAttribute(\"data-filter\", JSON.stringify(filter));\n                      select.name = editFields[i].name;\n                      child.append(select);\n                      break;\n\n                    case \"textarea\":\n                      value = child.innerText;\n                      child.innerText = \"\";\n                      area = document.createElement(\"textarea\");\n                      area.name = editFields[i].name;\n                      area.value = value;\n                      area.setAttribute(\"data-value\", value);\n                      area.classList.add('form-control');\n                      child.append(area);\n                      break;\n                  }\n                }\n              });\n              curTd.innerHTML = \"\";\n              btnSave = document.createElement(\"input\");\n              btnAbort = document.createElement(\"input\");\n              btnSave.type = \"button\";\n              btnAbort.type = \"button\";\n              btnSave.value = \"✔\";\n              btnAbort.value = \"✖\";\n              btnSave.setAttribute(\"data-btn\", \"save\");\n              btnAbort.setAttribute(\"data-btn\", \"abort\");\n              curTd.append(btnSave);\n              curTd.append(btnAbort);\n            }\n\n            if (targetElement.closest('[data-btn=\"abort\"]')) {\n              _curTd = targetElement.parentElement;\n              _tr = _curTd.parentElement;\n              _childs = _tr.children;\n              Array.prototype.forEach.call(_childs, function (el, i) {\n                var childsEl = el.children;\n\n                if (!childsEl.length) {\n                  return;\n                }\n\n                var childEdit = false;\n\n                for (var j = 0; j < childsEl.length; j++) {\n                  if (childsEl[j].tagName == \"INPUT\" && childsEl[j].type == \"text\" || childsEl[j].tagName == \"SELECT\" || childsEl[j].tagName == \"TEXTAREA\") {\n                    childEdit = childsEl[j];\n                  }\n                }\n\n                if (childEdit) {\n                  var value = childEdit.getAttribute(\"data-value\");\n\n                  if (isJson(value)) {\n                    value = JSON.parse(value);\n                    var ul = document.createElement(\"ul\");\n                    if (childEdit.hasAttribute('data-filter')) ul.setAttribute('data-filter', childEdit.getAttribute('data-filter'));\n                    var li;\n\n                    for (var _i = 0, _Object$entries = Object.entries(value); _i < _Object$entries.length; _i++) {\n                      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n                          key = _Object$entries$_i[0],\n                          val = _Object$entries$_i[1];\n\n                      li = document.createElement(\"li\");\n                      li.setAttribute(\"data-id\", key);\n                      li.innerText = val;\n                      ul.append(li);\n                    }\n\n                    el.innerHTML = \"\";\n                    el.append(ul);\n                  } else {\n                    childEdit.remove();\n                    el.innerText = value;\n                  }\n                }\n              });\n              _curTd.innerHTML = \"\";\n              btnEdit = document.createElement(\"input\");\n              btnEdit.type = \"button\";\n              btnEdit.value = \"✎\";\n              btnEdit.setAttribute(\"data-btn\", \"edit\");\n\n              _curTd.append(btnEdit);\n            }\n\n            if (targetElement.closest('[data-btn=\"save\"]')) {\n              _curTd2 = targetElement.parentElement;\n              _tr2 = _curTd2.parentElement;\n              _childs2 = _tr2.children;\n              data = {};\n              Array.prototype.forEach.call(_childs2, function (el, i) {\n                var childsEl = el.children;\n\n                if (!childsEl.length) {\n                  return;\n                }\n\n                var childInput = false;\n\n                for (var j = 0; j < childsEl.length; j++) {\n                  if (childsEl[j].tagName == \"INPUT\" && childsEl[j].type == \"text\") {\n                    data[childsEl[j].name] = childsEl[j].value;\n                  }\n\n                  if (childsEl[j].tagName == \"SELECT\") {\n                    var selected = el.querySelectorAll('option:checked');\n                    data[childsEl[j].name] = Array.from(selected).map(function (el) {\n                      return el.value;\n                    });\n                  }\n\n                  if (childsEl[j].tagName == \"INPUT\" && childsEl[j].type == \"checkbox\") {\n                    data.id = childsEl[j].value;\n                  }\n\n                  if (childsEl[j].tagName == \"TEXTAREA\") {\n                    data[childsEl[j].name] = childsEl[j].value;\n                  }\n                }\n              });\n\n              if (Object.keys(data).length != 0) {\n                fetch(document.location.origin + document.location.pathname + \"/edit\", {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'X-CSRF-Token': document.head.querySelector('meta[name=\"csrf-token\"]').content\n                  },\n                  body: JSON.stringify(data)\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (res) {\n                  if (res.error) {\n                    console.log(\"Error: \" + res.error);\n                  } else {\n                    Array.prototype.forEach.call(_childs2, function (el, i) {\n                      var childsEl = el.children;\n\n                      if (!childsEl.length) {\n                        return;\n                      }\n\n                      var childInput = false;\n                      var value;\n\n                      for (var j = 0; j < childsEl.length; j++) {\n                        (function () {\n                          switch (childsEl[j].tagName) {\n                            case \"INPUT\":\n                              if (childsEl[j].type == \"text\") {\n                                value = childsEl[j].value;\n                                childsEl[j].remove();\n                                el.innerText = value;\n                              }\n\n                              break;\n\n                            case \"SELECT\":\n                              var selected = childsEl[j].querySelectorAll(\"option:checked\");\n                              var ul = document.createElement(\"ul\");\n                              if (childsEl[j].hasAttribute('data-filter')) ul.setAttribute('data-filter', childsEl[j].getAttribute('data-filter'));\n                              Array.from(selected).map(function (opt) {\n                                var li = document.createElement(\"li\");\n                                li.setAttribute(\"data-id\", opt.value);\n                                li.innerText = opt.innerText;\n                                ul.append(li);\n                              }, ul);\n                              el.innerHTML = \"\";\n                              el.append(ul);\n                              break;\n\n                            case \"TEXTAREA\":\n                              value = childsEl[j].value;\n                              childsEl[j].remove();\n                              el.innerText = value;\n                              break;\n                          }\n                        })();\n                      }\n\n                      if (childInput) {\n                        var _value = childInput.value;\n                        childInput.remove();\n                        el.innerText = _value;\n                      }\n                    });\n                    _curTd2.innerHTML = \"\";\n\n                    var _btnEdit = document.createElement(\"input\");\n\n                    _btnEdit.type = \"button\";\n                    _btnEdit.value = \"✎\";\n\n                    _btnEdit.setAttribute(\"data-btn\", \"edit\");\n\n                    _curTd2.append(_btnEdit);\n                  }\n                });\n              }\n            }\n\n            if (targetElement.closest('[data-btn=\"remove\"]')) {\n              table = document.querySelector(\"table\");\n              checkedElem = table.querySelectorAll(\"[data-checkbox]:checked\");\n              delElem = Array.from(checkedElem).map(function (el) {\n                return el.value;\n              });\n              fetch(document.location.origin + document.location.pathname + \"/delete\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json;charset=utf-8',\n                  'X-CSRF-Token': document.head.querySelector('meta[name=\"csrf-token\"]').content\n                },\n                body: JSON.stringify(delElem)\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                if (res.error || res.status == \"error\") {\n                  console.log(\"Error: \" + res.message);\n                } else {\n                  location.reload();\n                }\n              });\n            }\n\n            if (targetElement.closest('[data-btn=\"newElem\"]')) {\n              _table = document.querySelector(\"table\");\n\n              if (!_table.querySelector('[data-new-elem]')) {\n                template = document.querySelector(\"#addElement\");\n                newTr = template.content.cloneNode(true);\n                newTr.querySelector(\"tr\").setAttribute(\"data-new-elem\", \"\");\n\n                _table.querySelector(\"tbody\").prepend(newTr);\n\n                _tr3 = _table.querySelector(\"tbody tr\");\n                filter = _tr3.querySelector(\"[data-filter-target]\");\n\n                if (filter) {\n                  evt = new Event(\"change\", {\n                    \"bubbles\": true,\n                    \"cancelable\": false\n                  });\n                  filter.dispatchEvent(evt);\n                }\n              }\n            }\n\n            if (targetElement.closest('[data-btn=\"decline\"]')) {\n              _table2 = document.querySelector(\"table\");\n\n              _table2.querySelector('[data-new-elem]').remove();\n            }\n\n            if (targetElement.closest('[data-btn=\"add\"]')) {\n              _curTd3 = targetElement.parentElement;\n              _tr4 = _curTd3.parentElement;\n              _childs3 = _tr4.children;\n              _data = {};\n              Array.prototype.forEach.call(_childs3, function (el, i) {\n                var childsEl = el.children;\n\n                if (!childsEl.length) {\n                  return;\n                }\n\n                var childInput = false;\n\n                for (var j = 0; j < childsEl.length; j++) {\n                  if (childsEl[j].tagName == \"INPUT\" && childsEl[j].type == \"text\") {\n                    _data[childsEl[j].name] = childsEl[j].value;\n                  }\n\n                  if (childsEl[j].tagName == \"SELECT\") {\n                    var selected = el.querySelectorAll('option:checked');\n                    _data[childsEl[j].name] = Array.from(selected).map(function (el) {\n                      return el.value;\n                    });\n                  }\n\n                  if (childsEl[j].tagName == \"INPUT\" && childsEl[j].type == \"checkbox\") {\n                    _data.id = childsEl[j].value;\n                  }\n\n                  if (childsEl[j].tagName == \"TEXTAREA\") {\n                    _data[childsEl[j].name] = childsEl[j].value;\n                  }\n                }\n              });\n\n              if (Object.keys(_data).length != 0) {\n                fetch(document.location.origin + document.location.pathname + \"/add\", {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'X-CSRF-Token': document.head.querySelector('meta[name=\"csrf-token\"]').content\n                  },\n                  body: JSON.stringify(_data)\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (res) {\n                  if (res.error || res.status == \"error\") {\n                    console.log(\"Error: \" + res.error);\n                  } else {\n                    location.reload();\n                  }\n                });\n              }\n            }\n\n            if (e.type == \"click\" && targetElement.closest('[data-btn=\"filterElem\"]')) {\n              searchElem = document.querySelector('.findElem');\n\n              if (searchElem.style.display == \"none\") {\n                searchElem.style.display = \"\";\n              } else {\n                searchElem.value = \"\"; // searchElem.dispatchEvent(new KeyboardEvent(\"keyup\",{\"key\": \"Backspace\"}));\n\n                _table3 = document.querySelector('table');\n\n                for (i = 1; i < _table3.rows.length; i++) {\n                  _table3.rows[i].style.display = \"\";\n                }\n\n                searchElem.style.display = \"none\";\n              }\n            }\n\n            if (targetElement.closest('[data-select-all]')) {\n              status = targetElement.checked;\n              listCheckbox = document.querySelectorAll(\"[data-checkbox]\");\n              Array.from(listCheckbox).map(function (el) {\n                return el.checked = status;\n              });\n            }\n\n            if (targetElement.closest(\"[type='checkbox']\")) {\n              _status = true;\n              allCheckbox = document.querySelector(\"[data-select-all]\");\n              listCheckBox = document.querySelectorAll(\"[data-checkbox]\");\n              Array.from(listCheckBox).map(function (el) {\n                if (!el.checked) {\n                  _status = false;\n                }\n              }, _status);\n              allCheckbox.checked = _status;\n            }\n\n            if (!(e.type == \"click\" && targetElement.closest('[data-btn=\"search\"]'))) {\n              _context.next = 31;\n              break;\n            }\n\n            searchTr = targetElement.parentElement.parentElement;\n            listFields = searchTr.querySelectorAll(\"[name]\");\n            strFilter = '';\n\n            if (listFields.length) {\n              searchData = {};\n              _strFilter = 'searchField=';\n              Array.from(listFields).map(function (el) {\n                switch (el.tagName) {\n                  case \"INPUT\":\n                    switch (el.type) {\n                      case \"text\":\n                        if (el.value) {\n                          _strFilter += el.name + ',';\n                          searchData[el.name] = el.value;\n                        }\n\n                        break;\n\n                      case \"checkbox\":\n                        if (el.value) {\n                          _strFilter += el.name + ',';\n                          searchData[el.name] = el.checked;\n                        }\n\n                        break;\n                    }\n\n                    break;\n\n                  case \"SELECT\":\n                    if (el.multiple) {\n                      console.log(el.value);\n                    } else {\n                      if (el.value) {\n                        _strFilter += el.name + ',';\n                        searchData[el.name] = el.value;\n                      }\n                    }\n\n                    break;\n                }\n              });\n              _strFilter = _strFilter.replace(/^,+|,+$/g, '');\n\n              for (key in searchData) {\n                _strFilter += \"&\" + key + \"=\" + searchData[key];\n              }\n            }\n\n            url = location.pathname;\n            url += '?page=1' + (strFilter ? '&' + strFilter : '');\n            history.pushState({}, \"title\", url);\n            _context.next = 21;\n            return fetch(url, {\n              method: 'GET'\n            });\n\n          case 21:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 25;\n            return response;\n\n          case 25:\n            _data2 = _context.sent;\n\n            _data2.text().then(function (html) {\n              var parser = new DOMParser();\n              var doc = parser.parseFromString(html, 'text/html');\n              var new_tbody = doc.querySelector('[data-table-body]');\n              document.querySelector('table tbody').innerHTML = new_tbody.innerHTML;\n              var new_pagenav = doc.querySelector('[data-pagination]');\n              document.querySelector('[data-pagination]').innerHTML = new_pagenav.innerHTML;\n            });\n\n            console.log(_data2);\n            _context.next = 31;\n            break;\n\n          case 30:\n            alert(\"Ошибка HTTP: \" + response.status);\n\n          case 31:\n            if (e.type == \"change\" && targetElement.closest(\"[data-filter-target]\")) {\n              filterIds = JSON.parse(targetElement.querySelector(\"option:checked\").getAttribute(\"data-filter-id\"));\n              targetName = targetElement.getAttribute(\"data-filter-target\");\n              target = document.querySelector(\"select[name=\\\"\".concat(targetName, \"\\\"]\"));\n              list = target.querySelectorAll(\"option\");\n              checked = false;\n              Array.from(list).map(function (opt) {\n                if (filterIds.includes(+opt.value)) {\n                  if (!checked) {\n                    opt.selected = true;\n                    checked = true;\n                  }\n\n                  opt.style.display = \"block\";\n                } else {\n                  opt.style.display = \"none\";\n                }\n              }, filterIds, checked);\n            }\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _documentActions.apply(this, arguments);\n}\n\ndocument.addEventListener('DOMContentLoaded', function (e) {\n  var search = {};\n  location.search.replace('\\?', '').split('&').map(function (v, i, a) {\n    var prop = v.split('=');\n    search[prop[0]] = decodeURI(prop[1]);\n  }, search);\n\n  if (search.hasOwnProperty('searchField')) {\n    var filter = document.querySelector('[data-search-filter]');\n    filter.style.display = '';\n    var listField = filter.querySelectorAll('[name]');\n    Array.from(listField).map(function (field) {\n      if (search.hasOwnProperty(field.name)) {\n        switch (field.tagName) {\n          case \"INPUT\":\n            field.value = search[field.name];\n            break;\n\n          case \"SELECT\":\n            field.value = search[field.name];\n            break;\n        }\n      }\n    });\n  }\n}); // --------------------------------------------------------------------------------------\n\nvar searchTerm = function searchTerm(e) {\n  var searchInput = document.querySelector(\".search-input\");\n  document.location.href = \"/searchPage/?q=\".concat(searchInput.value);\n};\n\ndocument.querySelector(\".search-input\").addEventListener('keypress', function (e) {\n  if (e.key == \"Enther\") searchTerm();\n});\ndocument.querySelector(\".btn-search\").addEventListener('click', searchTerm);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/sass/main.sass":
/*!**********************************!*\
  !*** ./resources/sass/main.sass ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9tYWluLnNhc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3Nhc3MvbWFpbi5zYXNzPzJjMDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sass/main.sass\n");

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz85NDNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0,
/******/ 			"css/main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app","css/main"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	__webpack_require__.O(undefined, ["css/app","css/main"], () => (__webpack_require__("./resources/sass/main.sass")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app","css/main"], () => (__webpack_require__("./resources/sass/app.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;